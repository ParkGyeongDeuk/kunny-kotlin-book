plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.androidhuman.example.simplegithub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "GITHUB_CLIENT_ID",
                project.properties["GITHUB_CLIENT_ID"] ?: "\"NOT_FOUND\""

        buildConfigField "String", "GITHUB_CLIENT_SECRET",
                project.properties["GITHUB_CLIENT_SECRET"] ?: "\"NOT_FOUND\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

}

dependencies {
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.browser:browser:$supportLibVersion"
    implementation "com.google.android.material:material:$supportLibVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "com.jakewharton.rxbinding4:rxbinding:$rxBindingVersion"
    implementation "com.jakewharton.rxbinding4:rxbinding-appcompat:$rxBindingVersion"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleVersion"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifeCycleVersion"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifeCycleVersion"
    // Jetpack Compose Integration for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha05"
    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    // Room 라이브러리 RxJava 플러그인
    implementation "androidx.room:room-rxjava3:$roomVersion"
    // 대거의 기본 기능을 사용하기 위해 필요합니다.
    implementation "com.google.dagger:dagger:$daggerVersion"
    // 안드로이드에 특화된 대거의 기능을 사용하기 위해 필요합니다.
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    // 안드로이드 서포트 라이브러리를 지원하는 대거의 기능을 사용하기 위해 필요합니다.
    // (DaggerAppCompatActivity, dagger.android.support.DaggerFragment)
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // 안드로이드에 특화된 대거의 기능을 처리해주는 어노테이션 프로세서입니다.
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    // 대거의 기본 기능(의존관계 분석 및 코드 생성)을 처리해주는 어노테이션 프로세서입니다.
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

}
